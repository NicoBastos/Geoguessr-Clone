{"version":3,"sources":["components/Game/GameScreen/EndScreen/EndScreen.module.css","components/Home/DifficultySelector/DifficultySelector.module.css","components/Home/Home.module.css","components/Game/GameScreen/GameScreen.module.css","components/Game/GameScreen/WorldMap/RoundInfoDisplay/RoundInfoDisplay.module.css","components/Game/GameScreen/EndOfRound/EndOfRound.module.css","App.module.css","components/Game/GameScreen/WorldMap/WorldMap.module.css","components/Navbar/Navbar.module.css","static/marker.svg","components/Home/StartButton/StartButton.module.css","static/geoguesser_icon.svg","components/Game/GameScreen/StreetView/StreetView.module.css","components/Game/GameScreen/WorldMap/ConfirmGuessButton/ConfirmGuessButton.module.css","components/Game/Modal/Modal.module.css","components/Game/Backdrop/Backdrop.module.css","static/score.svg","static/miles.svg","static/share.svg","components/Navbar/Navbar.tsx","static/geoguesser_logo.svg","components/Home/DifficultySelector/DifficultySelector.tsx","context/appContext.tsx","components/Home/StartButton/StartButton.tsx","components/Home/Home.tsx","components/Game/GameScreen/StreetView/ReactStreetView/ReactStreetView.js","components/Game/GameScreen/StreetView/StreetView.tsx","components/Game/GameScreen/WorldMap/RoundInfoDisplay/RoundInfoDisplay.tsx","components/Game/GameScreen/WorldMap/ConfirmGuessButton/ConfirmGuessButton.tsx","components/Game/GameScreen/WorldMap/WorldMap.tsx","components/Game/GameScreen/EndOfRound/EndOfRound.tsx","components/Game/Backdrop/Backdrop.tsx","components/Game/Modal/Modal.tsx","components/Game/GameScreen/EndScreen/EndScreen.tsx","components/Game/GameScreen/GameScreen.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Navbar","className","classes","NavBar","Logo","href","alt","src","Title","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fillRule","clipRule","d","fill","_ref3","x","y","width","height","_ref4","_ref5","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","DiffcultySelector","useState","selected","setSelected","easyButtonClass","EasyButtonSelected","EasyButton","mediumButtonClass","MediumButtonSelected","MediumButton","hardButtonClass","HardButtonSelected","HardButton","handleClick","button","difficulty","ButtonsContainer","onClick","Paragraph","coordinateList","getRandomPosition","min","max","index","Math","ceil","floor","random","lat","lng","AppContext","React","createContext","AppContextProvider","points","setPoints","setDifficulty","round","setRound","currentRoundFinished","setCurrentRoundFished","currentRoundAnswer","setCurrentRoundAnswer","currentRoundGuess","setCurrentRoundGuess","pointsEarned","setPointsEarned","guessDist","setGuessDist","Provider","value","children","StartButton","difficultySettings","userSelectedDifficulty","useContext","useEffect","to","Fragment","Home","Boolean","logo","logoImg","paragraph","gameSettings","difficultySelector","StartButtonContainer","ReactStreetview","streetView","canvas","googleMaps","StreetViewPanorama","streetViewPanoramaOptions","addListener","onPositionChanged","getPosition","onPovChanged","getPov","initialize","ReactDOM","findDOMNode","event","clearInstanceListeners","setPosition","position","style","Component","defaultProps","pov","heading","pitch","zoom","asyncLoading","globalPath","url","apiKey","jsonp","StreetView","coordinates","disableDefaultUI","showRoadLabels","zoomControl","clickToGo","console","log","scrollwheel","panControlOption","StreetViewComponent","RoundInfoDisplay","RoundInfoContainer","RoundContainer","Data","PointsContainer","ConfirmGuessButton","GuessButton","handleEndOfRound","WorldMap","icon","L","iconUrl","require","iconSize","iconAnchor","point","WorldMapContainer","InfoDisplay","Map","center","e","latlng","handleMapClick","Marker","TileLayer","ConfirmButton","EndOfRound","pointList","LatLng","Polyline","positions","InfoContainer","NextRoundButton","handleNextRound","Backdrop","show","Modal","nextProps","nextState","transform","opacity","EndScreen","color","DataContainer","Data1","ptsIcon","Data2","milesIcon","Data3","shareIcon","PlayAgainButtonContainer","GameScreen","gameFinished","setGameFinished","mapClassName","Close","Open","MapWrapper","guess","answer","toRadian","degree","PI","distance","lon1","lat1","lon2","lat2","deltaLat","deltaLon","a","pow","sin","cos","asin","sqrt","getDistance","pointsEarnedCalc","prevPoints","CalcPointsEarned","prevRound","App","Body","exact","path","HomeWrapper","window","location","hostname","match","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5742c653.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"EndOfRound\":\"EndScreen_EndOfRound__2K4nA\",\"Map\":\"EndScreen_Map__3r2tr\",\"InfoContainer\":\"EndScreen_InfoContainer__3S0tA\",\"NextRoundButton\":\"EndScreen_NextRoundButton__cTdgd\",\"PlayAgainButtonContainer\":\"EndScreen_PlayAgainButtonContainer__kzxyS\",\"DataContainer\":\"EndScreen_DataContainer__1-K99\",\"Data1\":\"EndScreen_Data1__pRXPa\",\"Data2\":\"EndScreen_Data2__3vJ6_\",\"Data3\":\"EndScreen_Data3__3ClFh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DiffcultySelector\":\"DifficultySelector_DiffcultySelector__1BofT\",\"ButtonsContainer\":\"DifficultySelector_ButtonsContainer__fVodW\",\"Paragraph\":\"DifficultySelector_Paragraph__3Kuiw\",\"EasyButton\":\"DifficultySelector_EasyButton__16CjJ\",\"EasyButtonSelected\":\"DifficultySelector_EasyButtonSelected__1q8rS\",\"MediumButton\":\"DifficultySelector_MediumButton__3KVdR\",\"MediumButtonSelected\":\"DifficultySelector_MediumButtonSelected__10bO3\",\"HardButton\":\"DifficultySelector_HardButton__1rLFR\",\"HardButtonSelected\":\"DifficultySelector_HardButtonSelected__15hxT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__3raXt\",\"StartButtonContainer\":\"Home_StartButtonContainer__18tis\",\"difficultySelector\":\"Home_difficultySelector__rdff-\",\"paragraph\":\"Home_paragraph__3JHx1\",\"gameSettings\":\"Home_gameSettings__ad46z\",\"logo\":\"Home_logo__3HNjC\",\"logoImg\":\"Home_logoImg__16PSI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameScreen\":\"GameScreen_GameScreen__UnO3B\",\"StreetView\":\"GameScreen_StreetView__c-fgl\",\"MapWrapper\":\"GameScreen_MapWrapper__2XUbt\",\"Map\":\"GameScreen_Map__3mcnO\",\"Open\":\"GameScreen_Open__AdN5x\",\"Close\":\"GameScreen_Close__13sZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RoundInfoContainer\":\"RoundInfoDisplay_RoundInfoContainer__2J33a\",\"Title\":\"RoundInfoDisplay_Title__LUc4m\",\"Data\":\"RoundInfoDisplay_Data__2gr_q\",\"RoundContainer\":\"RoundInfoDisplay_RoundContainer__pG0Bo\",\"PointsContainer\":\"RoundInfoDisplay_PointsContainer__3f30r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EndOfRound\":\"EndOfRound_EndOfRound___K_XQ\",\"Map\":\"EndOfRound_Map__Ff1Ig\",\"InfoContainer\":\"EndOfRound_InfoContainer__15jld\",\"NextRoundButton\":\"EndOfRound_NextRoundButton__28E44\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"App_NavBar__7uQ2x\",\"Body\":\"App_Body__Z4xfZ\",\"HomeWrapper\":\"App_HomeWrapper__BBXsZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorldMapContainer\":\"WorldMap_WorldMapContainer__2gyxu\",\"Map\":\"WorldMap_Map__cnVJ_\",\"InfoDisplay\":\"WorldMap_InfoDisplay__3asns\",\"ConfirmButton\":\"WorldMap_ConfirmButton__3uZ20\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"Navbar_NavBar__3xnXn\",\"Logo\":\"Navbar_Logo__2mEM2\",\"Title\":\"Navbar_Title__1a8Wn\"};","module.exports = __webpack_public_path__ + \"static/media/marker.08c15e91.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartButton\":\"StartButton_StartButton__32_RV\"};","module.exports = __webpack_public_path__ + \"static/media/geoguesser_icon.6c1b7034.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StreetViewComponent\":\"StreetView_StreetViewComponent__3VO50\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GuessButton\":\"ConfirmGuessButton_GuessButton__3n-eG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1Z1K9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1X0ll\"};","module.exports = __webpack_public_path__ + \"static/media/score.ec29201d.svg\";","module.exports = __webpack_public_path__ + \"static/media/miles.c30ee514.svg\";","module.exports = __webpack_public_path__ + \"static/media/share.e7643ace.svg\";","import React from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport Logo from \"../../static/geoguesser_icon.svg\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  return (\r\n    <header className={classes.NavBar}>\r\n      <div className={classes.Logo}>\r\n        <a href=\"/\">\r\n          <img alt=\"logo\" src={Logo} />\r\n        </a>\r\n      </div>\r\n      <p className={classes.Title}>Geoguessr-Clone</p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M187.74 106.566C189.836 105.78 192.754 105.204 196.116 105.044V110.956C192.754 110.796 189.836 110.22 187.74 109.434C186.489 108.965 185.685 108.478 185.248 108.091C185.211 108.058 185.178 108.028 185.15 108C185.178 107.972 185.211 107.942 185.248 107.909C185.685 107.522 186.489 107.035 187.74 106.566ZM200.693 68.7097V102.085C208.247 102.565 214 105.03 214 108C214 111.186 207.38 113.791 199.017 113.988C198.819 114.043 198.613 114.072 198.405 114.072C198.211 114.072 198.02 114.047 197.835 114C189.075 113.967 182 111.293 182 108C182 104.925 188.167 102.391 196.116 102.041V68.7097C189.603 68.1206 183.568 65.0427 179.267 60.1167C174.967 55.1906 172.731 48.7958 173.026 42.2631C173.321 35.7303 176.123 29.5629 180.85 25.0444C185.578 20.5258 191.865 18.0041 198.405 18.0041C204.944 18.0041 211.231 20.5258 215.959 25.0444C220.686 29.5629 223.488 35.7303 223.783 42.2631C224.078 48.7958 221.842 55.1906 217.542 60.1167C213.241 65.0427 207.206 68.1206 200.693 68.7097ZM208.26 109.434C206.334 110.156 203.714 110.702 200.693 110.909V105.091C203.714 105.298 206.334 105.844 208.26 106.566C209.511 107.035 210.315 107.522 210.752 107.909C210.789 107.942 210.822 107.972 210.85 108C210.822 108.028 210.789 108.058 210.752 108.091C210.315 108.478 209.511 108.965 208.26 109.434ZM211.042 107.77C211.043 107.77 211.04 107.776 211.034 107.786C211.038 107.776 211.042 107.77 211.042 107.77ZM184.958 107.77C184.958 107.77 184.962 107.776 184.966 107.786C184.96 107.776 184.957 107.77 184.958 107.77ZM184.958 108.23C184.957 108.23 184.96 108.224 184.966 108.214C184.962 108.224 184.958 108.23 184.958 108.23ZM211.034 108.214C211.04 108.224 211.043 108.23 211.042 108.23C211.042 108.23 211.038 108.224 211.034 108.214ZM198.139 21.5C196.759 21.5 195.639 22.6193 195.639 24C195.639 25.3807 196.759 26.5 198.139 26.5C207.804 26.5 215.639 34.335 215.639 44C215.639 45.3807 216.759 46.5 218.139 46.5C219.52 46.5 220.639 45.3807 220.639 44C220.639 31.5736 210.566 21.5 198.139 21.5Z\",\n  fill: \"#4F4F4F\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 769,\n  y: 70,\n  width: 64,\n  height: 26,\n  fill: \"#414141\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M786.146 78.0127V79.8994C785.225 79.1292 784.272 78.7441 783.288 78.7441C782.203 78.7441 781.29 79.1338 780.547 79.9131C779.799 80.6878 779.426 81.6357 779.426 82.7568C779.426 83.8643 779.799 84.7985 780.547 85.5596C781.294 86.3206 782.21 86.7012 783.295 86.7012C783.855 86.7012 784.332 86.61 784.724 86.4277C784.942 86.3366 785.168 86.2135 785.4 86.0586C785.637 85.9036 785.886 85.7168 786.146 85.498V87.4189C785.234 87.9339 784.277 88.1914 783.274 88.1914C781.766 88.1914 780.479 87.665 779.412 86.6123C778.35 85.5505 777.819 84.2699 777.819 82.7705C777.819 81.4261 778.264 80.2275 779.152 79.1748C780.246 77.8851 781.661 77.2402 783.397 77.2402C784.345 77.2402 785.261 77.4977 786.146 78.0127ZM789.755 77.4453V86.5029H792.858V88H788.162V77.4453H789.755ZM793.405 82.6748C793.405 81.1891 793.95 79.9131 795.039 78.8467C796.124 77.7803 797.427 77.2471 798.949 77.2471C800.453 77.2471 801.743 77.7848 802.818 78.8604C803.898 79.9359 804.438 81.2279 804.438 82.7363C804.438 84.2539 803.896 85.5413 802.812 86.5986C801.722 87.6605 800.408 88.1914 798.867 88.1914C797.505 88.1914 796.281 87.7197 795.196 86.7764C794.002 85.7327 793.405 84.3656 793.405 82.6748ZM795.012 82.6953C795.012 83.862 795.404 84.8213 796.188 85.5732C796.967 86.3252 797.867 86.7012 798.888 86.7012C799.995 86.7012 800.929 86.3184 801.69 85.5527C802.451 84.778 802.832 83.8346 802.832 82.7227C802.832 81.597 802.456 80.6536 801.704 79.8926C800.957 79.127 800.032 78.7441 798.929 78.7441C797.83 78.7441 796.903 79.127 796.146 79.8926C795.39 80.6491 795.012 81.5833 795.012 82.6953ZM806.441 88V76.7275L814.139 84.7803V77.4453H815.731V88.6426L808.034 80.6104V88H806.441ZM824.092 78.9424H819.86V81.4785H823.969V82.9756H819.86V86.5029H824.092V88H818.268V77.4453H824.092V78.9424Z\",\n  fill: \"white\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M29.6377 40.6602H48.9521V42.2041C48.9521 45.7158 48.5384 48.8239 47.7109 51.5283C46.9036 54.0309 45.5413 56.3721 43.624 58.5518C39.2848 63.4359 33.765 65.8779 27.0645 65.8779C20.5254 65.8779 14.9248 63.5166 10.2627 58.7939C5.60059 54.0511 3.26953 48.3597 3.26953 41.7197C3.26953 34.9385 5.64095 29.1865 10.3838 24.4639C15.1266 19.721 20.8988 17.3496 27.7002 17.3496C31.3532 17.3496 34.764 18.0964 37.9326 19.5898C40.96 21.0833 43.9368 23.5052 46.8633 26.8555L41.8379 31.6689C38.0033 26.5628 33.3311 24.0098 27.8213 24.0098C22.8766 24.0098 18.7292 25.7152 15.3789 29.126C12.0286 32.4762 10.3535 36.6742 10.3535 41.7197C10.3535 46.9268 12.2204 51.2155 15.9541 54.5859C19.4456 57.7142 23.2298 59.2783 27.3066 59.2783C30.778 59.2783 33.8962 58.1077 36.6611 55.7666C39.4261 53.4053 40.9701 50.5798 41.293 47.29H29.6377V40.6602ZM133.246 24.8877H114.506V36.1191H132.701V42.749H114.506V58.3701H133.246V65H107.453V18.2578H133.246V24.8877ZM284.879 40.6602H304.194V42.2041C304.194 45.7158 303.78 48.8239 302.952 51.5283C302.145 54.0309 300.783 56.3721 298.865 58.5518C294.526 63.4359 289.006 65.8779 282.306 65.8779C275.767 65.8779 270.166 63.5166 265.504 58.7939C260.842 54.0511 258.511 48.3597 258.511 41.7197C258.511 34.9385 260.882 29.1865 265.625 24.4639C270.368 19.721 276.14 17.3496 282.942 17.3496C286.595 17.3496 290.005 18.0964 293.174 19.5898C296.201 21.0833 299.178 23.5052 302.105 26.8555L297.079 31.6689C293.245 26.5628 288.572 24.0098 283.063 24.0098C278.118 24.0098 273.971 25.7152 270.62 29.126C267.27 32.4762 265.595 36.6742 265.595 41.7197C265.595 46.9268 267.462 51.2155 271.195 54.5859C274.687 57.7142 278.471 59.2783 282.548 59.2783C286.019 59.2783 289.138 58.1077 291.903 55.7666C294.668 53.4053 296.211 50.5798 296.534 47.29H284.879V40.6602ZM369.748 18.2578V46.4121C369.748 50.4284 370.404 53.3649 371.715 55.2217C373.673 57.9059 376.428 59.248 379.98 59.248C383.552 59.248 386.317 57.9059 388.275 55.2217C389.587 53.4255 390.243 50.4889 390.243 46.4121V18.2578H397.296V48.3496C397.296 53.2741 395.763 57.3307 392.695 60.5195C389.244 64.0716 385.005 65.8477 379.98 65.8477C374.955 65.8477 370.726 64.0716 367.296 60.5195C364.228 57.3307 362.694 53.2741 362.694 48.3496V18.2578H369.748ZM483.921 24.8877H465.182V36.1191H483.376V42.749H465.182V58.3701H483.921V65H458.128V18.2578H483.921V24.8877ZM569.213 25.2207L563.492 28.6113C562.422 26.7546 561.403 25.5436 560.434 24.9785C559.425 24.3327 558.123 24.0098 556.529 24.0098C554.571 24.0098 552.946 24.5648 551.655 25.6748C550.363 26.7646 549.717 28.137 549.717 29.792C549.717 32.0726 551.412 33.9092 554.803 35.3018L559.465 37.209C563.259 38.7428 566.035 40.6198 567.79 42.8398C569.546 45.0397 570.424 47.7441 570.424 50.9531C570.424 55.252 568.991 58.804 566.125 61.6094C563.239 64.4349 559.657 65.8477 555.378 65.8477C551.322 65.8477 547.971 64.6468 545.328 62.2451C542.724 59.8434 541.099 56.4629 540.453 52.1035L547.598 50.5293C547.921 53.2741 548.486 55.1712 549.293 56.2207C550.746 58.2389 552.866 59.248 555.651 59.248C557.851 59.248 559.677 58.5114 561.13 57.0381C562.583 55.5648 563.31 53.6979 563.31 51.4375C563.31 50.5293 563.179 49.7018 562.916 48.9551C562.674 48.1882 562.281 47.4919 561.736 46.8662C561.211 46.2204 560.525 45.625 559.677 45.0801C558.829 44.515 557.82 43.9801 556.65 43.4756L552.139 41.5986C545.741 38.8942 542.542 34.9385 542.542 29.7314C542.542 26.2197 543.884 23.2832 546.569 20.9219C549.253 18.5404 552.593 17.3496 556.589 17.3496C561.978 17.3496 566.186 19.9733 569.213 25.2207ZM654.96 25.2207L649.238 28.6113C648.168 26.7546 647.149 25.5436 646.18 24.9785C645.171 24.3327 643.87 24.0098 642.275 24.0098C640.318 24.0098 638.693 24.5648 637.401 25.6748C636.11 26.7646 635.464 28.137 635.464 29.792C635.464 32.0726 637.159 33.9092 640.55 35.3018L645.212 37.209C649.006 38.7428 651.781 40.6198 653.537 42.8398C655.293 45.0397 656.171 47.7441 656.171 50.9531C656.171 55.252 654.738 58.804 651.872 61.6094C648.986 64.4349 645.403 65.8477 641.125 65.8477C637.068 65.8477 633.718 64.6468 631.074 62.2451C628.471 59.8434 626.846 56.4629 626.2 52.1035L633.345 50.5293C633.667 53.2741 634.233 55.1712 635.04 56.2207C636.493 58.2389 638.612 59.248 641.397 59.248C643.597 59.248 645.424 58.5114 646.877 57.0381C648.33 55.5648 649.056 53.6979 649.056 51.4375C649.056 50.5293 648.925 49.7018 648.663 48.9551C648.421 48.1882 648.027 47.4919 647.482 46.8662C646.957 46.2204 646.271 45.625 645.424 45.0801C644.576 44.515 643.567 43.9801 642.396 43.4756L637.886 41.5986C631.488 38.8942 628.289 34.9385 628.289 29.7314C628.289 26.2197 629.631 23.2832 632.315 20.9219C634.999 18.5404 638.34 17.3496 642.336 17.3496C647.724 17.3496 651.932 19.9733 654.96 25.2207ZM740.07 24.8877H721.331V36.1191H739.526V42.749H721.331V58.3701H740.07V65H714.278V18.2578H740.07V24.8877ZM814.767 45.0801L829.238 65H820.61L807.259 45.8672H805.988V65H798.934V18.2578H807.199C813.375 18.2578 817.835 19.4183 820.58 21.7393C823.607 24.3226 825.121 27.7334 825.121 31.9717C825.121 35.2816 824.172 38.1273 822.275 40.5088C820.378 42.8903 817.875 44.4141 814.767 45.0801ZM805.988 39.7217H808.228C814.908 39.7217 818.249 37.1686 818.249 32.0625C818.249 27.2793 814.999 24.8877 808.501 24.8877H805.988V39.7217Z\",\n  fill: \"#4F4F4F\"\n});\n\nvar SvgGeoguesserLogo = function SvgGeoguesserLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 600,\n    height: 115,\n    viewBox: \"0 0 833 115\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGeoguesserLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/geoguesser_logo.508582ab.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\nimport classes from \"./DifficultySelector.module.css\";\r\n\r\ninterface Props {\r\n  difficulty: (button: string) => void;\r\n}\r\nconst DiffcultySelector: React.FC<Props> = (props) => {\r\n  const [selected, setSelected] = useState<string>(\"\");\r\n  const easyButtonClass =\r\n    selected === \"easy\" ? classes.EasyButtonSelected : classes.EasyButton;\r\n  const mediumButtonClass =\r\n    selected === \"medium\" ? classes.MediumButtonSelected : classes.MediumButton;\r\n  const hardButtonClass =\r\n    selected === \"hard\" ? classes.HardButtonSelected : classes.HardButton;\r\n  const handleClick = (button: string) => {\r\n    setSelected(button);\r\n    props.difficulty(button);\r\n  };\r\n  return (\r\n    <div className={classes.DiffcultySelector}>\r\n      <div className={classes.ButtonsContainer}>\r\n        <button className={easyButtonClass} onClick={() => handleClick(\"easy\")}>\r\n          EASY\r\n        </button>\r\n        <button\r\n          className={mediumButtonClass}\r\n          onClick={() => handleClick(\"medium\")}\r\n        >\r\n          MEDIUM\r\n        </button>\r\n        <button className={hardButtonClass} onClick={() => handleClick(\"hard\")}>\r\n          HARD\r\n        </button>\r\n      </div>\r\n      <div className={classes.Paragraph}>\r\n        {selected === \"easy\" ? (\r\n          <p>Roads are labeled, you can move and look around freely.</p>\r\n        ) : selected === \"medium\" ? (\r\n          <p>\r\n            Roads are not labeled, zoom is disabled and you can't pan around\r\n          </p>\r\n        ) : (\r\n          <p>\r\n            Roads are not labaled, zoom is disabled and you can't pan or move\r\n            around.\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiffcultySelector;\r\n","import React, { useState } from \"react\";\r\n\r\ntype Props = {\r\n  children: any;\r\n};\r\ntype ContextProperties = {\r\n  round: number;\r\n  setRound: React.Dispatch<React.SetStateAction<number>>;\r\n  points: number;\r\n  setPoints: React.Dispatch<React.SetStateAction<number>>;\r\n  currentRoundAnswer: {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n  setCurrentRoundAnswer: React.Dispatch<\r\n    React.SetStateAction<{\r\n      lat: number;\r\n      lng: number;\r\n    }>\r\n  >;\r\n  currentRoundGuess: {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n  setCurrentRoundGuess: React.Dispatch<\r\n    React.SetStateAction<{\r\n      lat: number;\r\n      lng: number;\r\n    }>\r\n  >;\r\n  difficulty: string | undefined;\r\n  setDifficulty: React.Dispatch<React.SetStateAction<string>>;\r\n  currentRoundFinished: boolean;\r\n  setCurrentRoundFished: React.Dispatch<React.SetStateAction<boolean>>;\r\n  getRandomPosition: () => {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n  pointsEarned: number;\r\n  setPointsEarned: React.Dispatch<React.SetStateAction<number>>;\r\n  guessDist: number;\r\n  setGuessDist: React.Dispatch<React.SetStateAction<number>>;\r\n};\r\n\r\nconst coordinateList = [\r\n  [52.321945, -106.584168],\r\n  [34.448715, -106.349093],\r\n  [40.704919, -73.863833],\r\n  [19.272238, -99.129768],\r\n  [9.034096, -79.616542],\r\n  [5.015219, -74.348039],\r\n  [4.065262, -73.011297],\r\n  [-12.153372, -76.973771],\r\n  [-16.39339, -71.570031],\r\n  [-31.432391, -64.270932],\r\n  [-23.587288, -46.619191],\r\n  [-22.952026, -43.211411],\r\n  [40.414545, -3.694377],\r\n  [40.451883, -3.686835],\r\n  [48.843056, 2.326603],\r\n];\r\n\r\nconst getRandomPosition = () => {\r\n  function getRandomInt(min: number, max: number) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n  }\r\n  const index = getRandomInt(1, Object.keys(coordinateList).length);\r\n  return {\r\n    lat: coordinateList[index][0],\r\n    lng: coordinateList[index][1],\r\n  };\r\n};\r\nconst AppContext = React.createContext<Partial<ContextProperties>>({});\r\nconst AppContextProvider: React.FC<Props> = (props) => {\r\n  const [points, setPoints] = useState(0);\r\n  const [difficulty, setDifficulty] = useState(\"\");\r\n  const [round, setRound] = useState(1);\r\n  const [currentRoundFinished, setCurrentRoundFished] = useState<boolean>(\r\n    false\r\n  );\r\n  const [currentRoundAnswer, setCurrentRoundAnswer] = useState(\r\n    getRandomPosition()\r\n  );\r\n  const [currentRoundGuess, setCurrentRoundGuess] = useState({\r\n    lat: 0.0,\r\n    lng: 0.0,\r\n  });\r\n  const [pointsEarned, setPointsEarned] = useState(0);\r\n  const [guessDist, setGuessDist] = useState(0);\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        difficulty,\r\n        setDifficulty,\r\n        round,\r\n        setRound,\r\n        currentRoundAnswer,\r\n        setCurrentRoundAnswer,\r\n        currentRoundGuess,\r\n        setCurrentRoundGuess,\r\n        currentRoundFinished,\r\n        setCurrentRoundFished,\r\n        points,\r\n        setPoints,\r\n        getRandomPosition,\r\n        pointsEarned,\r\n        setPointsEarned,\r\n        guessDist,\r\n        setGuessDist,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppContextProvider;\r\nexport { AppContext };\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport classes from \"./StartButton.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppContext } from \"../../../context/appContext\";\r\ninterface Props {\r\n  difficultySettings: {\r\n    userSelectedDifficulty: boolean;\r\n    difficulty: string;\r\n  };\r\n}\r\n\r\nconst StartButton: React.FC<Props> = (props) => {\r\n  const { difficulty, userSelectedDifficulty } = props.difficultySettings;\r\n  const {\r\n    setDifficulty,\r\n    setPoints,\r\n    setRound,\r\n    setCurrentRoundFished,\r\n  } = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    setDifficulty(difficulty);\r\n    setPoints(0);\r\n    setRound(1);\r\n    setCurrentRoundFished(false);\r\n  });\r\n  const button: JSX.Element = userSelectedDifficulty ? (\r\n    <Link to=\"/game\">\r\n      <button className={classes.StartButton}>START GAME</button>\r\n    </Link>\r\n  ) : (\r\n    <button className={classes.StartButton}>START GAME</button>\r\n  );\r\n  return <React.Fragment>{button}</React.Fragment>;\r\n};\r\nexport default StartButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./Home.module.css\";\r\nimport { ReactComponent as Logo } from \"../../static/geoguesser_logo.svg\";\r\nimport DiffcultySelector from \"./DifficultySelector/DifficultySelector\";\r\nimport StartButton from \"../Home/StartButton/StartButton\";\r\nconst Home: React.FC = () => {\r\n  const [difficulty, setDifficulty] = useState<string>(\"\");\r\n  const userSelectedDifficulty: boolean = Boolean(difficulty) ? true : false;\r\n  useEffect(() => {});\r\n  return (\r\n    <div className={classes.Home}>\r\n      <div className={classes.logo}>\r\n        <Logo className={classes.logoImg} />\r\n      </div>\r\n      <p className={classes.paragraph}>\r\n        Geoguessr-Clone is a geography discovery game which takes you around the\r\n        world and challenges your ability to recognize your surroundings\r\n      </p>\r\n      <div className={classes.gameSettings}>\r\n        <div className={classes.difficultySelector}>\r\n          <DiffcultySelector difficulty={(button) => setDifficulty(button)} />\r\n        </div>\r\n        <div className={classes.StartButtonContainer}>\r\n          <StartButton\r\n            difficultySettings={{ userSelectedDifficulty, difficulty }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport asyncLoading from \"react-async-loader\";\r\n\r\nclass ReactStreetview extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.streetView = null;\r\n  }\r\n\r\n  initialize(canvas) {\r\n    if (this.props.googleMaps && this.streetView == null) {\r\n      this.streetView = new this.props.googleMaps.StreetViewPanorama(\r\n        canvas,\r\n        this.props.streetViewPanoramaOptions\r\n      );\r\n      this.streetView.addListener(\"position_changed\", () => {\r\n        if (this.props.onPositionChanged) {\r\n          this.props.onPositionChanged(this.streetView.getPosition());\r\n        }\r\n      });\r\n\r\n      this.streetView.addListener(\"pov_changed\", () => {\r\n        if (this.props.onPovChanged) {\r\n          this.props.onPovChanged(this.streetView.getPov());\r\n        }\r\n      });\r\n    }\r\n    if (this.streetView) {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initialize(ReactDOM.findDOMNode(this));\r\n  }\r\n  componentDidUpdate() {\r\n    this.initialize(ReactDOM.findDOMNode(this));\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.streetView) {\r\n      this.props.googleMaps.event.clearInstanceListeners(this.streetView);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.streetView) {\r\n      this.streetView.setPosition(this.props.position);\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nReactStreetview.propTypes = {\r\n  apiKey: PropTypes.string.isRequired,\r\n  streetViewPanoramaOptions: PropTypes.object.isRequired,\r\n  onPositionChanged: PropTypes.func,\r\n  onPovChanged: PropTypes.func,\r\n};\r\n\r\nReactStreetview.defaultProps = {\r\n  streetViewPanoramaOptions: {\r\n    position: { lat: -22.952026, lng: -43.211411 },\r\n    pov: { heading: 0, pitch: 0 },\r\n    zoom: 1,\r\n  },\r\n};\r\n\r\nfunction mapScriptsToProps(props) {\r\n  const googleMapsApiKey = props.apiKey;\r\n  return {\r\n    googleMaps: {\r\n      globalPath: \"google.maps\",\r\n      url: \"https://maps.googleapis.com/maps/api/js?key=\" + googleMapsApiKey,\r\n      jsonp: true,\r\n    },\r\n  };\r\n}\r\n\r\nexport default asyncLoading(mapScriptsToProps)(ReactStreetview);\r\n","import React, { useContext, useRef, useEffect, useState } from \"react\";\r\nimport ReactStreetview from \"./ReactStreetView/ReactStreetView\";\r\nimport classes from \"./StreetView.module.css\";\r\nimport { AppContext } from \"../../../../context/appContext\";\r\ninterface Props {\r\n  difficulty: string | undefined;\r\n  coordinates: { lat: number; lng: number };\r\n}\r\ninterface Position {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n//Fake key AIzaSyBKCeA2SUnKaec8XdxOTM-JUAtYvV1NXAg\r\n// AIzaSyBTUFFAxn8LxEH8befAbCmFFRt7XQ5QK3A\r\nconst StreetView: React.FC<Props> = (props) => {\r\n  const { currentRoundAnswer, difficulty } = useContext(AppContext);\r\n\r\n  const googleMapsApiKey = \"AIzaSyBTUFFAxn8LxEH8befAbCmFFRt7XQ5QK3A\";\r\n  let streetViewPanoramaOptions;\r\n  switch (difficulty) {\r\n    case \"easy\":\r\n      streetViewPanoramaOptions = {\r\n        position: { lat: props.coordinates.lat, lng: props.coordinates.lng },\r\n        pov: { heading: 100, pitch: 0 },\r\n        zoom: 1,\r\n        disableDefaultUI: true,\r\n        showRoadLabels: true,\r\n        zoomControl: true,\r\n        clickToGo: true,\r\n      };\r\n      console.log(\"streetview\");\r\n      break;\r\n    case \"medium\":\r\n      streetViewPanoramaOptions = {\r\n        position: { lat: props.coordinates.lat, lng: props.coordinates.lng },\r\n        pov: { heading: 100, pitch: 0 },\r\n        zoom: 1,\r\n        disableDefaultUI: true,\r\n        showRoadLabels: false,\r\n        zoomControl: false,\r\n        clickToGo: true,\r\n        scrollwheel: false,\r\n      };\r\n      break;\r\n    case \"hard\":\r\n      streetViewPanoramaOptions = {\r\n        position: { lat: props.coordinates.lat, lng: props.coordinates.lng },\r\n        pov: { heading: 100, pitch: 0 },\r\n        zoom: 1,\r\n        disableDefaultUI: true,\r\n        showRoadLabels: false,\r\n        zoomControl: false,\r\n        clickToGo: false,\r\n        panControlOption: false,\r\n        scrollwheel: false,\r\n      };\r\n      break;\r\n  }\r\n  return (\r\n    <ReactStreetview\r\n      apiKey={googleMapsApiKey}\r\n      streetViewPanoramaOptions={streetViewPanoramaOptions}\r\n      className={classes.StreetViewComponent}\r\n      position={currentRoundAnswer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StreetView;\r\n","import React, { useContext } from \"react\";\r\nimport classes from \"./RoundInfoDisplay.module.css\";\r\nimport { AppContext } from \"../../../../../context/appContext\";\r\n\r\nconst RoundInfoDisplay: React.FC = () => {\r\n  const { round, points } = useContext(AppContext);\r\n  return (\r\n    <div className={classes.RoundInfoContainer}>\r\n      <div className={classes.RoundContainer}>\r\n        <p className={classes.Title}>Round</p>\r\n        <p className={classes.Data}>{round}/5</p>\r\n      </div>\r\n      <div className={classes.PointsContainer}>\r\n        <p className={classes.Title}>Points</p>\r\n        <p className={classes.Data}>{points}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoundInfoDisplay;\r\n","import React from \"react\";\r\nimport classes from \"./ConfirmGuessButton.module.css\";\r\n\r\ninterface Props {\r\n  selected: boolean;\r\n  handleEndOfRound: () => any;\r\n}\r\nconst ConfirmGuessButton: React.FC<Props> = (props) => {\r\n  const handleClick = () => {\r\n    if (props.selected) {\r\n      props.handleEndOfRound();\r\n    }\r\n  };\r\n  return (\r\n    <button className={classes.GuessButton} onClick={() => handleClick()}>\r\n      MAKE A GUESS\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ConfirmGuessButton;\r\n","import React, { useState, useContext } from \"react\";\r\nimport classes from \"./WorldMap.module.css\";\r\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport RoundInformationDisplay from \"./RoundInfoDisplay/RoundInfoDisplay\";\r\nimport ConfirmGuessButton from \"./ConfirmGuessButton/ConfirmGuessButton\";\r\nimport { AppContext } from \"../../../../context/appContext\";\r\ninterface Props {\r\n  handleEndOfRound: () => void;\r\n  className: any;\r\n}\r\nconst WorldMap: React.FC<Props> = (props) => {\r\n  const { currentRoundGuess, setCurrentRoundGuess } = useContext(AppContext);\r\n  const icon = L.icon({\r\n    iconUrl: require(\"../../../../static/marker.svg\"),\r\n    iconSize: [24, 24],\r\n    iconAnchor: L.point(12, 24),\r\n  });\r\n\r\n  const [selected, setSelected] = useState<boolean>(false);\r\n  const handleMapClick = (e: any) => {\r\n    setCurrentRoundGuess({ ...e.latlng });\r\n    setSelected(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.WorldMapContainer}>\r\n      <div className={classes.InfoDisplay}>\r\n        <RoundInformationDisplay />\r\n      </div>\r\n      <Map\r\n        center={[35, -45]}\r\n        zoom={2}\r\n        className={classes.Map}\r\n        onClick={(e: any) => handleMapClick(e)}\r\n      >\r\n        {selected ? (\r\n          <Marker\r\n            position={[currentRoundGuess.lat, currentRoundGuess.lng]}\r\n            icon={icon}\r\n          />\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n      </Map>\r\n      <div className={classes.ConfirmButton}>\r\n        <ConfirmGuessButton\r\n          selected={selected}\r\n          handleEndOfRound={props.handleEndOfRound}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WorldMap;\r\n","import React, { useContext } from \"react\";\r\nimport classes from \"./EndOfRound.module.css\";\r\nimport { Map, TileLayer, Marker, Polyline } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport { AppContext } from \"../../../../context/appContext\";\r\n\r\ninterface Props {\r\n  handleNextRound: () => any;\r\n}\r\nconst EndOfRound: React.FC<Props> = (props) => {\r\n  const {\r\n    currentRoundGuess,\r\n    currentRoundAnswer,\r\n    pointsEarned,\r\n    guessDist,\r\n  } = useContext(AppContext);\r\n  const { lat, lng } = currentRoundGuess;\r\n  const icon = L.icon({\r\n    iconUrl: require(\"../../../../static/marker.svg\"),\r\n    iconSize: [24, 24],\r\n    iconAnchor: L.point(12, 24),\r\n  });\r\n  const point1 = new L.LatLng(lat, lng);\r\n  const point2 = new L.LatLng(currentRoundAnswer.lat, currentRoundAnswer.lng);\r\n  const pointList = [point1, point2];\r\n  return (\r\n    <div className={classes.EndOfRound}>\r\n      <div className={classes.Map}>\r\n        <Map\r\n          center={{ lat: lat - 20, lng: lng }}\r\n          zoom={2}\r\n          className={classes.Map}\r\n        >\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n          <Marker\r\n            position={[currentRoundGuess.lat, currentRoundGuess.lng]}\r\n            icon={icon}\r\n          />\r\n          <Marker\r\n            position={[currentRoundAnswer.lat, currentRoundAnswer.lng]}\r\n            icon={icon}\r\n          />\r\n          <Polyline positions={pointList} />\r\n        </Map>\r\n      </div>\r\n      <div className={classes.InfoContainer}>\r\n        <p>{guessDist} Miles Away</p>\r\n        <p>\r\n          Your guess was {guessDist} miles away from the correct location! You\r\n          got {pointsEarned} points for your guess.\r\n        </p>\r\n        <button\r\n          className={classes.NextRoundButton}\r\n          onClick={() => props.handleNextRound()}\r\n        >\r\n          NEXT ROUND\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndOfRound;\r\n","import React from \"react\";\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\ninterface Props {\r\n  show: boolean;\r\n}\r\nconst Backdrop: React.FC<Props> = (props) => {\r\n  return props.show ? <div className={classes.Backdrop}></div> : null;\r\n};\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\ninterface Props {\r\n  show: boolean;\r\n}\r\nclass Modal extends React.Component<Props> {\r\n  shouldComponentUpdate(nextProps: any, nextState: any) {\r\n    return (\r\n      nextProps.show !== this.props.show ||\r\n      nextProps.children !== this.props.children\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Backdrop show={this.props.show} />\r\n        <div\r\n          className={classes.Modal}\r\n          style={{\r\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n            opacity: this.props.show ? \"1\" : \"0\",\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useContext } from \"react\";\r\nimport classes from \"./EndScreen.module.css\";\r\nimport { Map, TileLayer, Marker, Polyline } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport { AppContext } from \"../../../../context/appContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ptsIcon from \"../../../../static/score.svg\";\r\nimport milesIcon from \"../../../../static/miles.svg\";\r\nimport shareIcon from \"../../../../static/share.svg\";\r\nconst EndScreen: React.FC = () => {\r\n  const {\r\n    currentRoundGuess,\r\n    currentRoundAnswer,\r\n    pointsEarned,\r\n    guessDist,\r\n  } = useContext(AppContext);\r\n  const lat = currentRoundGuess.lat;\r\n  const lng = currentRoundGuess.lng;\r\n  const icon = L.icon({\r\n    iconUrl: require(\"../../../../static/marker.svg\"),\r\n    iconSize: [24, 24],\r\n    iconAnchor: L.point(12, 24),\r\n  });\r\n  const point1 = new L.LatLng(lat, lng);\r\n  const point2 = new L.LatLng(currentRoundAnswer.lat, currentRoundAnswer.lng);\r\n  const pointList = [point1, point2];\r\n\r\n  return (\r\n    <div className={classes.EndOfRound}>\r\n      <div className={classes.Map}>\r\n        <Map\r\n          center={{ lat: lat - 20, lng: lng }}\r\n          zoom={2}\r\n          className={classes.Map}\r\n        >\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n          <Marker\r\n            position={[currentRoundGuess.lat, currentRoundGuess.lng]}\r\n            icon={icon}\r\n          />\r\n          <Marker\r\n            position={[currentRoundAnswer.lat, currentRoundAnswer.lng]}\r\n            icon={icon}\r\n          />\r\n          <Polyline positions={pointList} style={{ color: \"red\" }} />\r\n        </Map>\r\n      </div>\r\n      <div className={classes.InfoContainer}>\r\n        <div className={classes.DataContainer}>\r\n          <div className={classes.Data1}>\r\n            <img alt=\"Points Icon\" src={ptsIcon} />\r\n            <p>{pointsEarned} PTS</p>\r\n            You got {pointsEarned} points for your guess.\r\n          </div>\r\n          <div className={classes.Data2}>\r\n            <img alt=\"Distance Icon\" src={milesIcon} />\r\n            <p>{guessDist} Miles </p>\r\n            Your guess was {guessDist} miles away from the correct location!\r\n          </div>\r\n          <div className={classes.Data3}>\r\n            <img alt=\"Distance Icon\" src={shareIcon} />\r\n            <p>Share</p>\r\n            Share this project if you liked it!\r\n          </div>\r\n        </div>\r\n        <div className={classes.PlayAgainButtonContainer}>\r\n          <Link to=\"/\">\r\n            <button className={classes.NextRoundButton}>PLAY AGAIN</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndScreen;\r\n","import React, { useContext, useState, useRef } from \"react\";\r\nimport { AppContext } from \"../../../context/appContext\";\r\nimport StreetView from \"./StreetView/StreetView\";\r\nimport classes from \"./GameScreen.module.css\";\r\nimport WorldMap from \"./WorldMap/WorldMap\";\r\nimport EndOfRound from \"./EndOfRound/EndOfRound\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport EndScreen from \"../GameScreen/EndScreen/EndScreen\";\r\ninterface Game {\r\n  round: number;\r\n  points: number;\r\n}\r\ninterface TransitionStyle {\r\n  transform?: string | number;\r\n  opacity: number;\r\n}\r\ninterface TransitionStyles {\r\n  entering: TransitionStyle;\r\n  entered: TransitionStyle;\r\n  exiting: TransitionStyle;\r\n  exited: TransitionStyle;\r\n}\r\n\r\nconst GameScreen: React.FC = () => {\r\n  const {\r\n    difficulty,\r\n    round,\r\n    setRound,\r\n    setCurrentRoundAnswer,\r\n    currentRoundFinished,\r\n    setCurrentRoundFished,\r\n    setPoints,\r\n    getRandomPosition,\r\n    currentRoundAnswer,\r\n    currentRoundGuess,\r\n    setPointsEarned,\r\n    setGuessDist,\r\n  } = useContext(AppContext);\r\n  const [gameFinished, setGameFinished] = useState(false);\r\n  const CalcPointsEarned = (\r\n    guess: { lat: number; lng: number },\r\n    answer: { lat: number; lng: number }\r\n  ) => {\r\n    function getDistance(\r\n      guess: { lat: number; lng: number },\r\n      answer: { lat: number; lng: number }\r\n    ) {\r\n      // return distance in meters\r\n      var lon1 = toRadian(answer.lng),\r\n        lat1 = toRadian(answer.lat),\r\n        lon2 = toRadian(guess.lng),\r\n        lat2 = toRadian(guess.lat);\r\n\r\n      var deltaLat = lat2 - lat1;\r\n      var deltaLon = lon2 - lon1;\r\n\r\n      var a =\r\n        Math.pow(Math.sin(deltaLat / 2), 2) +\r\n        Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\r\n      var c = 2 * Math.asin(Math.sqrt(a));\r\n      var EARTH_RADIUS = 6371;\r\n      return c * EARTH_RADIUS * 1000;\r\n    }\r\n    function toRadian(degree: number) {\r\n      return (degree * Math.PI) / 180;\r\n    }\r\n    var distance = Math.floor(\r\n      (getDistance(currentRoundGuess, currentRoundAnswer) / 1000) * 0.62137119\r\n    );\r\n    // 3963\r\n    const pointsEarnedCalc = -distance + 7926;\r\n    setGuessDist(distance);\r\n    setPointsEarned(pointsEarnedCalc);\r\n    setPoints((prevPoints) => prevPoints + pointsEarnedCalc);\r\n  };\r\n  const endOfRoundHandler = () => {\r\n    CalcPointsEarned(currentRoundGuess, currentRoundAnswer);\r\n    if (round === 5) {\r\n      setGameFinished(true);\r\n    } else {\r\n      setRound((prevRound) => prevRound + 1);\r\n    }\r\n    setCurrentRoundFished(true);\r\n  };\r\n  const handleNextRound = () => {\r\n    setCurrentRoundFished(false);\r\n    setCurrentRoundAnswer(getRandomPosition());\r\n  };\r\n  const mapClassName = !currentRoundFinished\r\n    ? classes.Map + classes.Open\r\n    : classes.Map + classes.Close;\r\n\r\n  return (\r\n    <div className={classes.GameScreen}>\r\n      <div className={classes.MapWrapper}>\r\n        {currentRoundFinished ? (\r\n          gameFinished ? (\r\n            <Modal show={currentRoundFinished}>\r\n              <EndScreen />\r\n            </Modal>\r\n          ) : (\r\n            <Modal show={currentRoundFinished}>\r\n              {<EndOfRound handleNextRound={handleNextRound} />}\r\n            </Modal>\r\n          )\r\n        ) : (\r\n          <WorldMap\r\n            handleEndOfRound={endOfRoundHandler}\r\n            className={mapClassName}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={classes.StreetView}>\r\n        <StreetView difficulty={difficulty} coordinates={currentRoundAnswer} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameScreen;\r\n","import React from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport classes from \"./App.module.css\";\nimport Home from \"./components/Home/Home\";\nimport GameScreen from \"./components/Game/GameScreen/GameScreen\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AppContextProvider from \"./context/appContext\";\nfunction App() {\n  return (\n    <div className={classes.App}>\n      <Router>\n        <AppContextProvider>\n          <div className={classes.NavBar}>\n            <Navbar />\n          </div>\n          <div className={classes.Body}>\n            <Switch>\n              <Route exact path=\"/\">\n                <div className={classes.HomeWrapper}>\n                  <Home />\n                </div>\n              </Route>\n              <Route path=\"/game\">\n                <GameScreen />\n              </Route>\n            </Switch>\n          </div>\n        </AppContextProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"leaflet/dist/leaflet.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}